{
  "properties": [
    {
      "name": "pitchfork.forwarders.haystack.enabled",
      "type": "java.lang.Boolean",
      "description": "When true, creates a forwarder to a Haystack Kafka topic."
    },
    {
      "name": "pitchfork.forwarders.haystack.kafka.bootstrap-servers",
      "type": "java.lang.String",
      "description": "Comma separated list of Kafka bootstrap servers, for example 'kafka-service-1:9092,kafka-service-2:9092'."
    },
    {
      "name": "pitchfork.forwarders.haystack.kafka.topic",
      "type": "java.lang.String",
      "description": "Name of the Haystack's Kafka topic."
    },
    {
      "name": "pitchfork.forwarders.logging.enabled",
      "type": "java.lang.Boolean",
      "description": "When true, creates a forwarder that simply logs incoming spans."
    },
    {
      "name": "pitchfork.forwarders.logging.log-full-span",
      "type": "java.lang.Boolean",
      "description": "When true, logs the entire content of the span received. When false only the id is logged."
    },
    {
      "name": "pitchfork.forwarders.zipkin.enabled",
      "type": "java.lang.Boolean",
      "description": "When true, creates a forwarder that publishes spans into a Zipkin collector."
    },
    {
      "name": "pitchfork.forwarders.zipkin.endpoint",
      "type": "java.lang.String",
      "description": "Endpoint for the remote Zipkin collector, for example 'http://zipkinhost:9411/api/v2/spans'."
    },
    {
      "name": "pitchfork.forwarders.zipkin.max-inflight-requests",
      "type": "java.lang.Integer",
      "description": "Maximum in flight requests for Zipkin http client."
    },
    {
      "name": "pitchfork.forwarders.zipkin.write-timeout-millis",
      "type": "java.lang.Integer",
      "description": "Write timeout for Zipkin http client, in milliseconds."
    },
    {
      "name": "pitchfork.forwarders.zipkin.compression-enabled",
      "type": "java.lang.Boolean",
      "description": "Compresses spans before sending to remote Zipkin collector."
    }
  ]
}

